version: '3'

env:
  AWS_REGION: ap-northeast-1

tasks:
  default:
    cmds:
      - task --list

  build:
    internal: true
    cmds:
      - GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -tags lambda.norpc -o bootstrap ../cmd/jsonl-otel-forwarder/main.go

  diff:
    cmds:
      - aqua exec lambroll diff

  lambda:deploy:
    desc: deploy to aws
    deps:
      - build
    cmds:
      - task: diff
      - aqua exec lambroll deploy --keep-versions 10
      - task: clean

  lambda:deploy-dry-run:
    desc: dry-run deploy to aws
    deps:
      - build
    cmds:
      - task: diff
      - aqua exec lambroll deploy --dry-run --log-level debug"

  lambda:rollback:
    desc: rollback to aws
    cmds:
      - aqua exec lambroll rollback

  clean:
    desc: clean up
    cmds:
      - rm -f bootstrap
      - rm -f *_dummy.zip

  lambda:logs:
    desc: show logs
    cmds:
      - aqua exec lambroll logs --follow

  terraform:lock:
    cmds:
      - |
        aqua exec terraform providers lock \
          -platform=darwin_amd64 \
          -platform=darwin_arm64 \
          -platform=linux_amd64 \
          -platform=linux_arm64 \
          -platform=windows_amd64
  terraform:init:
    desc: execute terraform init
    cmds:
      - task: terraform:lock
      - aqua exec terraform init --upgrade
  terraform:plan:
    desc: execute terraform plan
    cmds:
      - aqua exec terraform plan
  terraform:apply:
    desc: execute terraform apply
    cmds:
      - aqua exec terraform apply
